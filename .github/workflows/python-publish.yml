# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches:
      - main # Set a branch to deploy

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Check for licenses
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install license_scanner
          python -m license_scanner -m whitelist

      - name: Pytest
        run: |
          pip install pytest
          python -m pytest

      - name: build package
        run: |
          pip install build
          python -m build
          publish-to-pypi:
            name: >-
              Publish Python 🐍 distribution 📦 to PyPI
            if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
            needs:
            - build
            runs-on: ubuntu-latest
            environment:
              name: pypi
              url: https://pypi.org/p/happy_kostadin  # Replace happy_kostadin with your PyPI project name
            permissions:
              id-token: write  # IMPORTANT: mandatory for trusted publishing
